#PROBLEM - SUBTRACTING FACTORS HERE:
##tmp$CURRENT_ENERGY_RATING[tmp_entries[row]$LMK_KEY] <-
print(tmp_entries$CURRENT_ENERGY_RATING[1] - tmp_entries$CURRENT_ENERGY_RATING[row]) # 1 is the first entry of dups
tmp_entries$n_dEE <- tmp_entries$CURRENT_ENERGY_EFFICIENCY[1] - tmp_entries$CURRENT_ENERGY_EFFICIENCY[row]
}
}
#PROBLEM - SUBTRACTING FACTORS HERE:
##tmp$CURRENT_ENERGY_RATING[tmp_entries[row]$LMK_KEY] <-
print(tmp_entries$CURRENT_ENERGY_RATING[1] - tmp_entries$CURRENT_ENERGY_RATING[row]) # 1 is the first entry of dups
tmp_entries$CURRENT_ENERGY_RATING[1]
#PROBLEM - SUBTRACTING FACTORS HERE:
##tmp$CURRENT_ENERGY_RATING[tmp_entries[row]$LMK_KEY] <-
print(tmp_entries$n_dER[1] - tmp_entries$n_dER[row]) # 1 is the first entry of dups
tmp_entries$n_dER[1]
#Delta(ER)
#might cause problems without trimming white spaces and caps
tmp$n_dER <- as.numeric(factor(tmp$CURRENT_ENERGY_RATING,
ordered = T, levels = c('A','B','C','D','E','F')))
head(tmp$n_dER)
#get a case of duplicates
tmp_entries <- subset(tmp, tmp[,dupcol] == entry)
tmp_entries$n_dER[1]
#PROBLEM - SUBTRACTING FACTORS HERE:
##tmp$CURRENT_ENERGY_RATING[tmp_entries[row]$LMK_KEY] <-
print(tmp_entries$n_dER[1] - tmp_entries$n_dER[row]) # 1 is the first entry of dups
typeof(tmp$CURRENT_ENERGY_EFFICIENCY)
typeof(tmp$CURRENT_ENERGY_RATING)
length(tmp_LMKs)[1]
tmp_LMKs[1]
tmp$n_dER[ tmp$LMKs == tmp_LMKs[row]]
tmp$n_dER[ which(tmp$LMKs == tmp_LMKs[row])]
which(tmp$LMKs == tmp_LMKs[row])
which(tmp$LMKs %in% tmp_LMKs[row])
which(tmp$LMK %in% tmp_LMKs[row])
which(tmp$LMK_KEY %in% tmp_LMKs[row])
tmp$n_dER[ tmp$LMK_KEY == tmp_LMKs[row]]
dupcol <- 'combined'
for (entry in unique(tmp[,dupcol])) {
#get a case of duplicates
tmp_entries <- subset(tmp, tmp[,dupcol] == entry)
tmp_LMKs <- unique(tmp_entries$LMK_KEY)
for (row in length(tmp_LMKs)){
if(row > 1){ #row one is always the first entry
tmp_entries$n_dER[row] <- tmp_entries$n_dER[1] - tmp_entries$n_dER[row] # factor as numbers
tmp_entries$n_dEE[row] <- tmp_entries$CURRENT_ENERGY_EFFICIENCY[1] - tmp_entries$CURRENT_ENERGY_EFFICIENCY[row]
}
#tmp$n_dER[which(tmp$LMK_KEY %in% tmp_LMKs[row])]
#tmp$n_dEE[which(tmp$LMK_KEY %in% tmp_LMKs[row])]
}
}
View(tmp_entries)
dupcol <- 'combined'
for (entry in unique(tmp[,dupcol])) {
#get a case of duplicates
tmp_entries <- subset(tmp, tmp[,dupcol] == entry)
tmp_LMKs <- unique(tmp_entries$LMK_KEY)
for (row in length(tmp_LMKs)){
if(row > 1){ #row one is always the first entry
tmp_entries$n_dER[row] <- tmp_entries$n_dER[1] - tmp_entries$n_dER[row] # factor as numbers
tmp_entries$n_dEE[row] <- tmp_entries$CURRENT_ENERGY_EFFICIENCY[row] -tmp_entries$CURRENT_ENERGY_EFFICIENCY[1]
}
#tmp$n_dER[which(tmp$LMK_KEY %in% tmp_LMKs[row])]
#tmp$n_dEE[which(tmp$LMK_KEY %in% tmp_LMKs[row])]
}
}
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
#library(dplyr)
#get folders
folders <- list.files(path = "../Data/all-domestic-certificates", pattern = NULL, all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
folders <- folders[-342] #remove the .txt
str_dups <- data.frame()
#Here might be a place to get difference by LAD, eg.g:
## % of one of entries by folder.
## Median CURRENT_ENERGY_RATING
## Mean, SD of (CURRENT - POTENTIAL_ENERGY_EFFICIENCY)
######or (ENVIROMENT_IMPACT_CURRENT - POTENTIAL)
######or any other more specific: e.g. C02 emission, lighting, heating, hotwater,
## Proportion of PROPERTY_TYPE and/or BUILT_FORM and/or Transaction_Type and/or CONSTRUCTION_AGE_BAND and/or TENURE
## Min, Max, Mean, SD of INSPECTION DATE and/or Lodgementdate
folders_meta <- data.frame()
folders_meta$name <- folders
folders_meta <- data.frame(names = folders)
View(folders_meta)
certificates <- read_csv(paste0("../Data/all-domestic-certificates/",LA,"/certificates.csv"))
#get dups
LA <- folders[2]
certificates <- read_csv(paste0("../Data/all-domestic-certificates/",LA,"/certificates.csv"))
summary(certificates$TENURE)
summary(as.factor(certificates$TENURE))
#Get difference by LAD, eg.g:
folders_meta <- data.frame(names = folders)
folders_meta$name <- folders
folders_meta$totalEntries <- 0
folders_meta$PerCentOneOffEntries <- 0 ## % one-off entries by folder.
## Min, Max, Mean, SD of INSPECTION DATE and/or Lodgementdate
folders_meta$IdateMin <- 0
folders_meta$IdateMax <- 0
folders_meta$IdateMedian <- 0
folders_meta$LdateMin <- 0
folders_meta$LdateMax <- 0
folders_meta$LdateMedian <- 0
## CURRENT_ENERGY_RATING (factor)
folders_meta$cERmedian <- 0
## POTENTIAL - CURRENT_ENERGY_EFFICIENCY (int)
folders_meta$p_cEEficMedian <- 0
folders_meta$p_cEEficMean <- 0
folders_meta$p_cEEficSD <- 0
## Other ideas
######or (ENVIROMENT_IMPACT_CURRENT - POTENTIAL)
######or any other more specific: e.g. C02 emission, lighting, heating, hotwater,
## Proportion of PROPERTY_TYPE and/or BUILT_FORM and/or Transaction_Type and/or CONSTRUCTION_AGE_BAND and/or TENURE.Note: inconsistent factors
f = 2
LA <- folders[f]
certificates <- read_csv(paste0("../Data/all-domestic-certificates/",LA,"/certificates.csv"))
folders_meta[folders_meta$name == f,]
folders_meta$names <- NULL
folders_meta[folders_meta$name == f,]
folders_meta[folders_meta$name == f]
folders_meta$name == f
f
folders_meta[folders_meta$name == LA,]
folders_meta[folders_meta$name == LA,]$name
length(certificates)
length(certificates[1])
length(certificates$LMK_KEY)
year(certificates$INSPECTION_DATE)
Year(certificates$INSPECTION_DATE)
library(DescTools)
Year(certificates$INSPECTION_DATE)
sum(certificates$LODGEMENT_DATETIME == certificates$LODGEMENT_DATE)
sum(identical(certificates$LODGEMENT_DATETIME, certificates$LODGEMENT_DATE))
sum(identical(certificates$LODGEMENT_DATETIME, certificates$LODGEMENT_DATE))
identical(certificates$LODGEMENT_DATETIME, certificates$LODGEMENT_DATE)
str_dups <- data.frame()
for (f in folders) {
LA <- folders[f]
certificates <- read_csv(paste0("../Data/all-domestic-certificates/",LA,"/certificates.csv"))
#Dups df #######################################
certificates$combined <- paste0(certificates$ADDRESS, certificates$POSTCODE) #measure of repeat entry here
tmpdups <- certificates[duplicated(certificates$combined) | duplicated(certificates$combined, fromLast = TRUE),]
tmpdups$folder <- LA #folder info
tmpdups <- tmpdups[order(tmpdups$combined, tmpdups$INSPECTION_DATE),]
str_dups <- rbind(str_dups,tmpdups)
#Folders Meta df #######################################
#Get difference by LAD, eg.g:
folders_meta[folders_meta$name == LA,]$totalEntries <- length(certificates$LMK_KEY)
folders_meta[folders_meta$name == LA,]$PerCentOneOffEntries <- 1 - length(tmpdups$LMK_KEY)/length(certificates$LMK_KEY) ## % one-off entries by folder.
## Min, Max, Mean, SD of INSPECTION DATE and/or Lodgementdate
folders_meta[folders_meta$name == LA,]$IdateMin <- min(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$IdateMax <- max(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$IdateMedian <- median(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$LdateMin <- min(Year(certificates$LODGEMENT_DATETIME))
folders_meta[folders_meta$name == LA,]$LdateMax <- max(Year(certificates$LODGEMENT_DATETIME))
folders_meta[folders_meta$name == LA,]$LdateMedian <- median(Year(certificates$LODGEMENT_DATETIME))
## CURRENT_ENERGY_RATING (factor)
tmp$CURRENT_ENERGY_RATING <- as.numeric(factor(tmp$CURRENT_ENERGY_RATING,
ordered = T, levels = c('A','B','C','D','E','F','G')))
folders_meta[folders_meta$name == LA,]$cERmedian <- median(tmp$CURRENT_ENERGY_RATING)
## POTENTIAL - CURRENT_ENERGY_EFFICIENCY (int)
folders_meta[folders_meta$name == LA,]$p_cEEficMedian <- median(certificates$POTENTIAL_ENERGY_EFFICIENCY - certificates$CURRENT_ENERGY_EFFICIENCY)
folders_meta[folders_meta$name == LA,]$p_cEEficMean <- mean(certificates$POTENTIAL_ENERGY_EFFICIENCY - certificates$CURRENT_ENERGY_EFFICIENCY)
folders_meta[folders_meta$name == LA,]$p_cEEficSD <- sd(certificates$POTENTIAL_ENERGY_EFFICIENCY - certificates$CURRENT_ENERGY_EFFICIENCY)
}
LA
f
for (f in folders) {
LA <- f
certificates <- read_csv(paste0("../Data/all-domestic-certificates/",LA,"/certificates.csv"))
#Dups df #######################################
certificates$combined <- paste0(certificates$ADDRESS, certificates$POSTCODE) #measure of repeat entry here
tmpdups <- certificates[duplicated(certificates$combined) | duplicated(certificates$combined, fromLast = TRUE),]
tmpdups$folder <- LA #folder info
tmpdups <- tmpdups[order(tmpdups$combined, tmpdups$INSPECTION_DATE),]
str_dups <- rbind(str_dups,tmpdups)
#Folders Meta df #######################################
#Get difference by LAD, eg.g:
folders_meta[folders_meta$name == LA,]$totalEntries <- length(certificates$LMK_KEY)
folders_meta[folders_meta$name == LA,]$PerCentOneOffEntries <- 1 - length(tmpdups$LMK_KEY)/length(certificates$LMK_KEY) ## % one-off entries by folder.
## Min, Max, Mean, SD of INSPECTION DATE and/or Lodgementdate
folders_meta[folders_meta$name == LA,]$IdateMin <- min(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$IdateMax <- max(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$IdateMedian <- median(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$LdateMin <- min(Year(certificates$LODGEMENT_DATETIME))
folders_meta[folders_meta$name == LA,]$LdateMax <- max(Year(certificates$LODGEMENT_DATETIME))
folders_meta[folders_meta$name == LA,]$LdateMedian <- median(Year(certificates$LODGEMENT_DATETIME))
## CURRENT_ENERGY_RATING (factor)
tmp$CURRENT_ENERGY_RATING <- as.numeric(factor(tmp$CURRENT_ENERGY_RATING,
ordered = T, levels = c('A','B','C','D','E','F','G')))
folders_meta[folders_meta$name == LA,]$cERmedian <- median(tmp$CURRENT_ENERGY_RATING)
## POTENTIAL - CURRENT_ENERGY_EFFICIENCY (int)
folders_meta[folders_meta$name == LA,]$p_cEEficMedian <- median(certificates$POTENTIAL_ENERGY_EFFICIENCY - certificates$CURRENT_ENERGY_EFFICIENCY)
folders_meta[folders_meta$name == LA,]$p_cEEficMean <- mean(certificates$POTENTIAL_ENERGY_EFFICIENCY - certificates$CURRENT_ENERGY_EFFICIENCY)
folders_meta[folders_meta$name == LA,]$p_cEEficSD <- sd(certificates$POTENTIAL_ENERGY_EFFICIENCY - certificates$CURRENT_ENERGY_EFFICIENCY)
}
str_dups <- data.frame()
for (f in folders) {
LA <- f
certificates <- read_csv(paste0("../Data/all-domestic-certificates/",LA,"/certificates.csv"))
#Dups df #######################################
certificates$combined <- paste0(certificates$ADDRESS, certificates$POSTCODE) #measure of repeat entry here
tmpdups <- certificates[duplicated(certificates$combined) | duplicated(certificates$combined, fromLast = TRUE),]
tmpdups$folder <- LA #folder info
tmpdups <- tmpdups[order(tmpdups$combined, tmpdups$INSPECTION_DATE),]
str_dups <- rbind(str_dups,tmpdups)
#Folders Meta df #######################################
#Get difference by LAD, eg.g:
folders_meta[folders_meta$name == LA,]$totalEntries <- length(certificates$LMK_KEY)
folders_meta[folders_meta$name == LA,]$PerCentOneOffEntries <- 1 - length(tmpdups$LMK_KEY)/length(certificates$LMK_KEY) ## % one-off entries by folder.
## Min, Max, Mean, SD of INSPECTION DATE and/or Lodgementdate
folders_meta[folders_meta$name == LA,]$IdateMin <- min(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$IdateMax <- max(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$IdateMedian <- median(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$LdateMin <- min(Year(certificates$LODGEMENT_DATETIME))
folders_meta[folders_meta$name == LA,]$LdateMax <- max(Year(certificates$LODGEMENT_DATETIME))
folders_meta[folders_meta$name == LA,]$LdateMedian <- median(Year(certificates$LODGEMENT_DATETIME))
## CURRENT_ENERGY_RATING (factor)
tmp$CURRENT_ENERGY_RATING <- as.numeric(factor(certificates$CURRENT_ENERGY_RATING,
ordered = T, levels = c('A','B','C','D','E','F','G')))
folders_meta[folders_meta$name == LA,]$cERmedian <- median(certificates$CURRENT_ENERGY_RATING)
## POTENTIAL - CURRENT_ENERGY_EFFICIENCY (int)
folders_meta[folders_meta$name == LA,]$p_cEEficMedian <- median(certificates$POTENTIAL_ENERGY_EFFICIENCY - certificates$CURRENT_ENERGY_EFFICIENCY)
folders_meta[folders_meta$name == LA,]$p_cEEficMean <- mean(certificates$POTENTIAL_ENERGY_EFFICIENCY - certificates$CURRENT_ENERGY_EFFICIENCY)
folders_meta[folders_meta$name == LA,]$p_cEEficSD <- sd(certificates$POTENTIAL_ENERGY_EFFICIENCY - certificates$CURRENT_ENERGY_EFFICIENCY)
}
#Folders Meta df #######################################
#Get difference by LAD, eg.g:
folders_meta[folders_meta$name == LA,]$totalEntries <- length(certificates$LMK_KEY)
folders_meta[folders_meta$name == LA,]$PerCentOneOffEntries <- 1 - length(tmpdups$LMK_KEY)/length(certificates$LMK_KEY) ## % one-off entries by folder.
## Min, Max, Mean, SD of INSPECTION DATE and/or Lodgementdate
folders_meta[folders_meta$name == LA,]$IdateMin <- min(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$IdateMax <- max(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$IdateMedian <- median(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$LdateMedian <- median(Year(certificates$LODGEMENT_DATETIME))
## CURRENT_ENERGY_RATING (factor)
tmp$CURRENT_ENERGY_RATING <- as.numeric(factor(certificates$CURRENT_ENERGY_RATING,
ordered = T, levels = c('A','B','C','D','E','F','G')))
folders_meta[folders_meta$name == LA,]$cERmedian <- median(certificates$CURRENT_ENERGY_RATING)
str_dups <- data.frame()
for (f in folders) {
LA <- f
certificates <- read_csv(paste0("../Data/all-domestic-certificates/",LA,"/certificates.csv"))
#Dups df #######################################
certificates$combined <- paste0(certificates$ADDRESS, certificates$POSTCODE) #measure of repeat entry here
tmpdups <- certificates[duplicated(certificates$combined) | duplicated(certificates$combined, fromLast = TRUE),]
tmpdups$folder <- LA #folder info
tmpdups <- tmpdups[order(tmpdups$combined, tmpdups$INSPECTION_DATE),]
str_dups <- rbind(str_dups,tmpdups)
#Folders Meta df #######################################
#Get difference by LAD, eg.g:
folders_meta[folders_meta$name == LA,]$totalEntries <- length(certificates$LMK_KEY)
folders_meta[folders_meta$name == LA,]$PerCentOneOffEntries <- 1 - length(tmpdups$LMK_KEY)/length(certificates$LMK_KEY) ## % one-off entries by folder.
## Min, Max, Mean, SD of INSPECTION DATE and/or Lodgementdate
folders_meta[folders_meta$name == LA,]$IdateMin <- min(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$IdateMax <- max(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$IdateMedian <- median(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$LdateMin <- min(Year(certificates$LODGEMENT_DATETIME))
folders_meta[folders_meta$name == LA,]$LdateMax <- max(Year(certificates$LODGEMENT_DATETIME))
folders_meta[folders_meta$name == LA,]$LdateMedian <- median(Year(certificates$LODGEMENT_DATETIME))
## CURRENT_ENERGY_RATING (factor)
certificates$CURRENT_ENERGY_RATING <- as.numeric(factor(certificates$CURRENT_ENERGY_RATING,
ordered = T, levels = c('A','B','C','D','E','F','G')))
folders_meta[folders_meta$name == LA,]$cERmedian <- median(certificates$CURRENT_ENERGY_RATING)
## POTENTIAL - CURRENT_ENERGY_EFFICIENCY (int)
folders_meta[folders_meta$name == LA,]$p_cEEficMedian <- median(certificates$POTENTIAL_ENERGY_EFFICIENCY - certificates$CURRENT_ENERGY_EFFICIENCY)
folders_meta[folders_meta$name == LA,]$p_cEEficMean <- mean(certificates$POTENTIAL_ENERGY_EFFICIENCY - certificates$CURRENT_ENERGY_EFFICIENCY)
folders_meta[folders_meta$name == LA,]$p_cEEficSD <- sd(certificates$POTENTIAL_ENERGY_EFFICIENCY - certificates$CURRENT_ENERGY_EFFICIENCY)
}
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(DescTools)
#get folders
folders <- list.files(path = "../Data/all-domestic-certificates", pattern = NULL, all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
folders <- folders[-342] #remove the .txt
#Get difference by LAD, eg.g:
folders_meta <- data.frame(names = folders)
folders_meta$name <- folders
folders_meta$totalEntries <- 0
folders_meta$PerCentOneOffEntries <- 0 ## % one-off entries by folder.
## Min, Max, Mean, SD of INSPECTION DATE and/or Lodgementdate
folders_meta$IdateMin <- 0
folders_meta$IdateMax <- 0
folders_meta$IdateMedian <- 0
folders_meta$LdateMin <- 0
folders_meta$LdateMax <- 0
folders_meta$LdateMedian <- 0
## CURRENT_ENERGY_RATING (factor)
folders_meta$cERmedian <- 0
## POTENTIAL - CURRENT_ENERGY_EFFICIENCY (int)
folders_meta$p_cEEficMedian <- 0
folders_meta$p_cEEficMean <- 0
folders_meta$p_cEEficSD <- 0
##ADDD\1
##percent rental
## percent rental that are B-D, Percent rental under D
## Other ideas
######or (ENVIROMENT_IMPACT_CURRENT - POTENTIAL)
######or any other more specific: e.g. C02 emission, lighting, heating, hotwater,
## Proportion of PROPERTY_TYPE and/or BUILT_FORM and/or Transaction_Type and/or CONSTRUCTION_AGE_BAND and/or TENURE.Note: inconsistent factors
str_dups <- data.frame()
for (f in folders) {
LA <- f
certificates <- read_csv(paste0("../Data/all-domestic-certificates/",LA,"/certificates.csv"))
#Dups df #######################################
certificates$combined <- paste0(certificates$ADDRESS, certificates$POSTCODE) #measure of repeat entry here
tmpdups <- certificates[duplicated(certificates$combined) | duplicated(certificates$combined, fromLast = TRUE),]
tmpdups$folder <- LA #folder info
tmpdups <- tmpdups[order(tmpdups$combined, tmpdups$INSPECTION_DATE),]
str_dups <- rbind(str_dups,tmpdups)
#Folders Meta df #######################################
#Get difference by LAD, eg.g:
folders_meta[folders_meta$name == LA,]$totalEntries <- length(certificates$LMK_KEY)
folders_meta[folders_meta$name == LA,]$PerCentOneOffEntries <- 1 - length(tmpdups$LMK_KEY)/length(certificates$LMK_KEY) ## % one-off entries by folder.
## Min, Max, Mean, SD of INSPECTION DATE and/or Lodgementdate
folders_meta[folders_meta$name == LA,]$IdateMin <- min(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$IdateMax <- max(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$IdateMedian <- median(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$LdateMin <- min(Year(certificates$LODGEMENT_DATETIME))
folders_meta[folders_meta$name == LA,]$LdateMax <- max(Year(certificates$LODGEMENT_DATETIME))
folders_meta[folders_meta$name == LA,]$LdateMedian <- median(Year(certificates$LODGEMENT_DATETIME))
## CURRENT_ENERGY_RATING (factor)
certificates$CURRENT_ENERGY_RATING <- as.numeric(factor(certificates$CURRENT_ENERGY_RATING,
ordered = T, levels = c('A','B','C','D','E','F','G')))
folders_meta[folders_meta$name == LA,]$cERmedian <- median(certificates$CURRENT_ENERGY_RATING)
## POTENTIAL - CURRENT_ENERGY_EFFICIENCY (int)
folders_meta[folders_meta$name == LA,]$p_cEEficMedian <- median(certificates$POTENTIAL_ENERGY_EFFICIENCY - certificates$CURRENT_ENERGY_EFFICIENCY)
folders_meta[folders_meta$name == LA,]$p_cEEficMean <- mean(certificates$POTENTIAL_ENERGY_EFFICIENCY - certificates$CURRENT_ENERGY_EFFICIENCY)
folders_meta[folders_meta$name == LA,]$p_cEEficSD <- sd(certificates$POTENTIAL_ENERGY_EFFICIENCY - certificates$CURRENT_ENERGY_EFFICIENCY)
}
save.image(file ='plane.RData')
problems(...)
problems(certificates)
View(problems(certificates))
which(certificates$LMK_KEY == problems(certificates)[1,3]
)
problems(certificates)[1,3]
problems(certificates)$actual[1]
which(certificates$LMK_KEY == problems(certificates)$actual[1])
View(folders_meta)
View(certificates)
View(certificates)
View(certificates)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(DescTools)
#get folders
folders <- list.files(path = "../Data/all-domestic-certificates", pattern = NULL, all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
folders <- folders[-342] #remove the .txt
#Get difference by LAD, eg.g:
folders_meta <- data.frame(names = folders)
folders_meta$name <- folders
folders_meta$totalEntries <- 0
folders_meta$PerCentOneOffEntries <- 0 ## % one-off entries by folder.
## Min, Max, Mean, SD of INSPECTION DATE and/or Lodgementdate
folders_meta$IdateMin <- 0
folders_meta$IdateMax <- 0
folders_meta$IdateMedian <- 0
folders_meta$LdateMin <- 0
folders_meta$LdateMax <- 0
folders_meta$LdateMedian <- 0
## CURRENT_ENERGY_RATING (factor)
folders_meta$cERmedian <- 0
## POTENTIAL - CURRENT_ENERGY_EFFICIENCY (int)
folders_meta$p_cEEficMedian <- 0
folders_meta$p_cEEficMean <- 0
folders_meta$p_cEEficSD <- 0
##ADDD\1
##percent rental
## percent rental that are B-D, Percent rental under D
## Other ideas
######or (ENVIROMENT_IMPACT_CURRENT - POTENTIAL)
######or any other more specific: e.g. C02 emission, lighting, heating, hotwater,
## Proportion of PROPERTY_TYPE and/or BUILT_FORM and/or Transaction_Type and/or CONSTRUCTION_AGE_BAND and/or TENURE.Note: inconsistent factors
str_dups <- data.frame()
for (f in folders) {
print(f)
LA <- f
certificates <- read_csv(paste0("../Data/all-domestic-certificates/",LA,"/certificates.csv"),
col_types = cols(COUNTY = col_character(), MAIN_HEATING_CONTROLS = col_character(),
INSPECTION_DATE = col_date(format = "%Y-%m-%d"),
LMK_KEY = col_character(), LODGEMENT_DATE = col_date(format = "%Y-%m-%d"),
LODGEMENT_DATETIME = col_character()))
#LODGEMENT_DATETIME = col_character() because it sometimes includes H:M:S
#Dups df #######################################
certificates$combined <- paste0(certificates$ADDRESS, certificates$POSTCODE) #measure of repeat entry here
tmpdups <- certificates[duplicated(certificates$combined) | duplicated(certificates$combined, fromLast = TRUE),]
tmpdups$folder <- LA #folder info
tmpdups <- tmpdups[order(tmpdups$combined, tmpdups$INSPECTION_DATE),]
str_dups <- rbind(str_dups,tmpdups)
#Folders Meta df #######################################
#Get difference by LAD, eg.g:
folders_meta[folders_meta$name == LA,]$totalEntries <- length(certificates$LMK_KEY)
folders_meta[folders_meta$name == LA,]$PerCentOneOffEntries <- 1 - length(tmpdups$LMK_KEY)/length(certificates$LMK_KEY) ## % one-off entries by folder.
## Min, Max, Mean, SD of INSPECTION DATE and/or Lodgementdate
folders_meta[folders_meta$name == LA,]$IdateMin <- min(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$IdateMax <- max(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$IdateMedian <- median(Year(certificates$INSPECTION_DATE))
folders_meta[folders_meta$name == LA,]$LdateMin <- min(Year(certificates$LODGEMENT_DATETIME))
folders_meta[folders_meta$name == LA,]$LdateMax <- max(Year(certificates$LODGEMENT_DATETIME))
folders_meta[folders_meta$name == LA,]$LdateMedian <- median(Year(certificates$LODGEMENT_DATETIME))
## CURRENT_ENERGY_RATING (factor)
certificates$CURRENT_ENERGY_RATING <- as.numeric(factor(certificates$CURRENT_ENERGY_RATING,
ordered = T, levels = c('A','B','C','D','E','F','G')))
folders_meta[folders_meta$name == LA,]$cERmedian <- median(certificates$CURRENT_ENERGY_RATING)
## POTENTIAL - CURRENT_ENERGY_EFFICIENCY (int)
folders_meta[folders_meta$name == LA,]$p_cEEficMedian <- median(certificates$POTENTIAL_ENERGY_EFFICIENCY - certificates$CURRENT_ENERGY_EFFICIENCY)
folders_meta[folders_meta$name == LA,]$p_cEEficMean <- mean(certificates$POTENTIAL_ENERGY_EFFICIENCY - certificates$CURRENT_ENERGY_EFFICIENCY)
folders_meta[folders_meta$name == LA,]$p_cEEficSD <- sd(certificates$POTENTIAL_ENERGY_EFFICIENCY - certificates$CURRENT_ENERGY_EFFICIENCY)
}
#note: 2269 parsing failures.4241 parsing failures.3219 parsing failures.4639 parsing failures.
#South-Ribble 3286 parsing failures.
View(folders_meta)
save(folders_meta,str_dups, './MetaData&StringDups.RData')
save(folders_meta,str_dups, file = './MetaData&StringDups.RData')
save.image(file = "./MetaData&StringDups_work_space.RData")
View(str_dups)
save(folders_meta,str_dups, file = 'C:/Users/billi/Dropbox/_PhD/Application Documents/CASA RA/RA OS NARRATE CASA/Code/MetaData&StringDups.RData')
print('cow')
cow
save(folders_meta, file = './MetaData.RData')
cow
View(folders_meta)
str_dups$test <- 0
load(file = '/MetaData&StringDups.RData'))
length(str_dups$)
load(file = '/MetaData&StringDups.RData')
load(file = './MetaData&StringDups.RData')
knitr::opts_chunk$set(echo = TRUE)
load('./str_dups_deltas.RData' )
knitr::opts_chunk$set(echo = TRUE)
load(file = './MetaData&StringDups.RData')
names(str_dups_deltas)
#Df of all rows that repeat
tmp <- str_dups
cat
#flag fist entries
tmp$firstEntry <- F
firstEntry <-which(!duplicated(tmp$combined)) #3539058
tmp$firstEntry[firstEntry] <- T
rm(firstEntry)
cat
#set up the time column, relative to Inspection Date
tmp$n_deltaDays <-  0
#Delta(ER)
#might cause problems without trimming white spaces and caps
tmp$n_dER <- as.numeric(factor(tmp$CURRENT_ENERGY_RATING,
ordered = T, levels = c('A','B','C','D','E','F')))
tmp$n_dEE <- tmp$CURRENT_ENERGY_EFFICIENCY
cat
names(tmp)
str_dups_deltas <- tmp
###Remove the first entries
repeat_dt <- str_dups_deltas[str_dups_deltas$firstEntry == F, ]
print('cat')
mean(repeat_dt$n_deltaDays)
median(repeat_dt$n_deltaDays)
View(repeat_dt)
View(head(repeat_dt))
View(head(str_dups_deltas))
max(repeat_dt$n_deltaDays)
sum(which(repeat_dt$n_dER<0))
View(head(repeat_dt$n_dER))
names(repeat_dt)
max(tmp$n_deltaDays)
min(tmp$n_dER)
min(as.numeric(tmp$n_dER))
head(tmp$n_dER)
typeof(head(tmp$n_dER))
min(head(tmp$n_dER))
min(as.numeric(tmp$n_dER), na.rm = T)
#Df of all rows that repeat
tmp <- str_dups
#flag fist entries
tmp$firstEntry <- F
firstEntry <-which(!duplicated(tmp$combined)) #3539058
tmp$firstEntry[firstEntry] <- T
rm(firstEntry)
#set up the time column, relative to Inspection Date
tmp$n_deltaDays <-  0
#Delta(ER)
#might cause problems without trimming white spaces and caps
tmp$n_dER <- as.numeric(factor(tmp$CURRENT_ENERGY_RATING,
ordered = T, levels = c('A','B','C','D','E','F')))
tmp$n_dEE <- tmp$CURRENT_ENERGY_EFFICIENCY
dupcol <- 'combined'
for (entry in unique(tmp[,dupcol])) {
print(which(entry == unique(tmp[,dupcol])))
#get a case of duplicates
tmp_entries <- subset(tmp, tmp[,dupcol] == entry)
tmp_LMKs <- unique(tmp_entries$LMK_KEY)
for (row in length(tmp_LMKs)){
if(row > 1){ #row one is always the first entry
# tmp_entries$n_dER[row] <- tmp_entries$n_dER[1] - tmp_entries$n_dER[row] # factor as numbers
# tmp_entries$n_dER[row] <- tmp_entries$CURRENT_ENERGY_EFFICIENCY[row] -tmp_entries$CURRENT_ENERGY_EFFICIENCY[1]
# tmp_entries$n_deltaDays[row] <- as.numeric(difftime(tmp$INSPECTION_DATE[1] ,tmp$INSPECTION_DATE[row] , units = c("days")))
tmp$n_dER[which(tmp$LMK_KEY %in% tmp_LMKs[row])]<- tmp_entries$n_dER[1] - tmp_entries$n_dER[row] # factor as numbers
tmp$n_dEE[which(tmp$LMK_KEY %in% tmp_LMKs[row])] <- tmp_entries$CURRENT_ENERGY_EFFICIENCY[row] -tmp_entries$CURRENT_ENERGY_EFFICIENCY[1]
tmp$n_deltaDays[which(tmp$LMK_KEY %in% tmp_LMKs[row])] <- as.numeric(difftime(tmp$INSPECTION_DATE[1] , tmp$INSPECTION_DATE[row] , units = c("days")))
}
}
}
