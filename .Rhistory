)
LAD_table <- list()
for(region in cross_data){
print(paste(region, Sys.time()))
tmp_tally <- loadRData(paste0("../Outputs/WIP_crossSectional/crossSectional_baseline_",region,".RData") )
tmp_tally[,n_CrelXbuiltForm := paste(n_Crel,BUILT_FORM )]
#View(tmp_tally[1:500,c('n_CrelXbuiltForm','n_Crel','BUILT_FORM')])
long <- tmp_tally[,.N, by = c('LAD11NM', 'n_CrelXbuiltForm')]
test <- reshape(long, idvar = "LAD11NM", timevar = "n_Crel", direction = "wide")
test$region <- region
LAD_table <- rbind(LAD_table,test, fill = TRUE)
}
View(test)
View(long)
LAD_table <- list()
for(region in cross_data){
print(paste(region, Sys.time()))
tmp_tally <- loadRData(paste0("../Outputs/WIP_crossSectional/crossSectional_baseline_",region,".RData") )
tmp_tally[,n_CrelXbuiltForm := paste(n_Crel,BUILT_FORM )]
#View(tmp_tally[1:500,c('n_CrelXbuiltForm','n_Crel','BUILT_FORM')])
long <- tmp_tally[,.N, by = c('LAD11NM', 'n_CrelXbuiltForm')]
test <- reshape(long, idvar = "LAD11NM", timevar = "n_CrelXbuiltForm", direction = "wide")
test$region <- region
LAD_table <- rbind(LAD_table,test, fill = TRUE)
}
LAD_table[is.na(LAD_table)] <- "0"#set 0 for NAs
write.xlsx(LAD_table,
file = "../Data/LAD_CrossSectional_Summary.xlsx", sheetName="n_CrelXbuiltForm", append=TRUE)
write.xlsx(LAD_table,
file = "../Data/LAD_CrossSectional_Summary.xlsx", sheetName="n_CrelXbuiltForm", append=TRUE)
write.xlsx(LAD_table,
file = "../Data/LAD_CrossSectional_Summary.xlsx", sheetName="n_CrelXbuiltForm", append=TRUE)
tmp_tally <- loadRData(paste0("../Outputs/WIP_longitudinal/long_LAD_tally_",region,".RData") )
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(data.table)
library(fasttime)
loadRData <- function(fileName){
#loads an RData file, and returns it
load(fileName)
get(ls()[ls() != "fileName"])
}
#get folders
long_data <- list.files(path = "../Data/RData_longitudinal", pattern = NULL, all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
#move London to the back
long_data <- long_data[c(1,2,c(seq(4,11,by=1)),3)]
long_data <- gsub(".RData","",as.character(long_data))
long_data <- gsub("longitudinalEPCs_","",as.character(long_data))
#get loopUp
LUT_tenure <- read_excel("../Data/OS-N_EPC_v10_LUT+dictionaries.xlsx", sheet = "TENURE",range = cell_cols("B:C"))
LUT_builtForm <- read_excel("../Data/OS-N_EPC_v10_LUT+dictionaries.xlsx", sheet = "BUILT_FORM",range = cell_cols("B:C"))
start.time <- Sys.time()
#long_data <- long_data[1] #testing
for (region in long_data) {
print(paste(region, Sys.time()))
tmp <- loadRData(paste0("../Data/RData_longitudinal/longitudinalEPCs_",region,".RData") )
#N1-2: first and last entries
tmp <- tmp[order(n_GRP,INSPECTION_DATE)]
tmp[, n_first :=  min(INSPECTION_DATE), by=list(n_GRP)]
tmp[  !is.na(n_first)] #remove where inspection date is NA, e.g, there are 7 in LONDON: 813658 813659 818797 818798 818799 921798 921799
tmp[, n_last := max(INSPECTION_DATE), by=list(n_GRP)]
#N3: info on repeats
tmp[, n_appearance := .N , by=list(n_GRP)]
#N4: info on UPRNs differences and NAs
tmp[, n_erNoUPRN := ifelse(UPRN == ubdc_UPRN,'same','diffUPRNs')]
tmp[, n_erNoUPRN := ifelse(UPRN == "" | is.na(UPRN),'diffUPRNs_NA_UPRN',n_erNoUPRN) ]
tmp[, n_erNoUPRN := ifelse(ubdc_UPRN == ""| is.na(ubdc_UPRN),'diffUPRNs_NA_ubdc_UPRN',n_erNoUPRN) ]
tmp[, n_erNoUPRN := ifelse(n_UPRN == "" | is.na(n_UPRN),'noUPRN',n_erNoUPRN) ]
#Deltas
##N5: n_d_CEE_ Change in CEE from previous entry
tmp[,CURRENT_ENERGY_EFFICIENCY := as.integer(CURRENT_ENERGY_EFFICIENCY) ]
tmp[, n_d_cEE := CURRENT_ENERGY_EFFICIENCY - shift(CURRENT_ENERGY_EFFICIENCY , fill = first(CURRENT_ENERGY_EFFICIENCY)), by=list(n_GRP)]
tmp[INSPECTION_DATE == n_first, n_d_cEE := NA_integer_]
##N6: n_d_time Days between previous entry
tmp[, n_d_time := as.numeric(difftime(INSPECTION_DATE,
shift(INSPECTION_DATE , fill = first(INSPECTION_DATE)),
units = c("days"))), by=list(n_GRP)]
##N7: days by group
tmp[, n_d_time_same_insp_day := ifelse(n_d_time == 0, 'same_day',
ifelse(n_d_time < 8, 'same_week',
ifelse(n_d_time < 30, 'same_month',
ifelse(n_d_time < 365, 'same_year', 'more_than_yr' ) )))]
#N8: Changes between the first and last, where more than 2 entries
tmp[, n_delta_change_first2last := last(CURRENT_ENERGY_EFFICIENCY) - first(CURRENT_ENERGY_EFFICIENCY), by=list(n_GRP)]
tmp[  n_last != INSPECTION_DATE, n_delta_change_first2last:= NA]
#N9:
tmp[, n_changeDir_first2last := ifelse(n_delta_change_first2last > 0, 'up', ifelse(n_delta_change_first2last == 0, 'NA', 'down' ) ) ]
#N10:
tmp[, n_changeLetter_first2last := ifelse(last(CURRENT_ENERGY_RATING) == first(CURRENT_ENERGY_RATING),'same','diff'), by=list(n_GRP)]
tmp[  n_last != INSPECTION_DATE, n_changeLetter_first2last:= NA]
#N11: create C relative column
tmp[, n_Crel:= ifelse(CURRENT_ENERGY_RATING == 'C', 'C',
ifelse(CURRENT_ENERGY_RATING %in% c('A', 'B'), 'C+',
ifelse(CURRENT_ENERGY_RATING %in% c('D', 'E','F','G'),'C-','NA' )))]
tmp[n_Crel =="NA", n_Crel:= ifelse(CURRENT_ENERGY_EFFICIENCY > 100, 'C+', 'C-')]#DEALs with: tmp[CURRENT_ENERGY_RATING =="INVALID!", ]$CURRENT_ENERGY_EFFICIENCY
#N12: create new Tenure column
LUT_colum <- LUT_tenure[match(tmp$TENURE, LUT_tenure$tenure_factors),"harmonisation"]
tmp[,n_tenure := LUT_colum]
tmp[is.na(n_tenure),n_tenure := 'unknown'] #deals with NAs
#N13: create new Built Form column
LUT_colum <- LUT_builtForm[match(tmp$BUILT_FORM, LUT_builtForm$BUILT_FORMfactors),"harmonisation"]
tmp[,n_builtForm := LUT_colum]
tmp[is.na(n_builtForm),n_builtForm := 'unknown']
tmp <-tmp[, c("LAD11NM","LMK_KEY",
"CURRENT_ENERGY_EFFICIENCY","POTENTIAL_ENERGY_EFFICIENCY",
"str_concat","UPRN","ubdc_UPRN",
"TENURE","BUILT_FORM","PROPERTY_TYPE", names(tmp)[which(startsWith(names(tmp),'n_'))]) ]
save(tmp_write, file = paste0("../Outputs/WIP_longitudinal/longitudinal_baseline_",region,".RData") )
print(paste('runtime:', Sys.time() - start.time))#2 mins
}
start.time <- Sys.time()
#long_data <- long_data[1] #testing
for (region in long_data) {
print(paste(region, Sys.time()))
tmp <- loadRData(paste0("../Data/RData_longitudinal/longitudinalEPCs_",region,".RData") )
#N1-2: first and last entries
tmp <- tmp[order(n_GRP,INSPECTION_DATE)]
tmp[, n_first :=  min(INSPECTION_DATE), by=list(n_GRP)]
tmp[  !is.na(n_first)] #remove where inspection date is NA, e.g, there are 7 in LONDON: 813658 813659 818797 818798 818799 921798 921799
tmp[, n_last := max(INSPECTION_DATE), by=list(n_GRP)]
#N3: info on repeats
tmp[, n_appearance := .N , by=list(n_GRP)]
#N4: info on UPRNs differences and NAs
tmp[, n_erNoUPRN := ifelse(UPRN == ubdc_UPRN,'same','diffUPRNs')]
tmp[, n_erNoUPRN := ifelse(UPRN == "" | is.na(UPRN),'diffUPRNs_NA_UPRN',n_erNoUPRN) ]
tmp[, n_erNoUPRN := ifelse(ubdc_UPRN == ""| is.na(ubdc_UPRN),'diffUPRNs_NA_ubdc_UPRN',n_erNoUPRN) ]
tmp[, n_erNoUPRN := ifelse(n_UPRN == "" | is.na(n_UPRN),'noUPRN',n_erNoUPRN) ]
#Deltas
##N5: n_d_CEE_ Change in CEE from previous entry
tmp[,CURRENT_ENERGY_EFFICIENCY := as.integer(CURRENT_ENERGY_EFFICIENCY) ]
tmp[, n_d_cEE := CURRENT_ENERGY_EFFICIENCY - shift(CURRENT_ENERGY_EFFICIENCY , fill = first(CURRENT_ENERGY_EFFICIENCY)), by=list(n_GRP)]
tmp[INSPECTION_DATE == n_first, n_d_cEE := NA_integer_]
##N6: n_d_time Days between previous entry
tmp[, n_d_time := as.numeric(difftime(INSPECTION_DATE,
shift(INSPECTION_DATE , fill = first(INSPECTION_DATE)),
units = c("days"))), by=list(n_GRP)]
##N7: days by group
tmp[, n_d_time_same_insp_day := ifelse(n_d_time == 0, 'same_day',
ifelse(n_d_time < 8, 'same_week',
ifelse(n_d_time < 30, 'same_month',
ifelse(n_d_time < 365, 'same_year', 'more_than_yr' ) )))]
#N8: Changes between the first and last, where more than 2 entries
tmp[, n_delta_change_first2last := last(CURRENT_ENERGY_EFFICIENCY) - first(CURRENT_ENERGY_EFFICIENCY), by=list(n_GRP)]
tmp[  n_last != INSPECTION_DATE, n_delta_change_first2last:= NA]
#N9:
tmp[, n_changeDir_first2last := ifelse(n_delta_change_first2last > 0, 'up', ifelse(n_delta_change_first2last == 0, 'NA', 'down' ) ) ]
#N10:
tmp[, n_changeLetter_first2last := ifelse(last(CURRENT_ENERGY_RATING) == first(CURRENT_ENERGY_RATING),'same','diff'), by=list(n_GRP)]
tmp[  n_last != INSPECTION_DATE, n_changeLetter_first2last:= NA]
#N11: create C relative column
tmp[, n_Crel:= ifelse(CURRENT_ENERGY_RATING == 'C', 'C',
ifelse(CURRENT_ENERGY_RATING %in% c('A', 'B'), 'C+',
ifelse(CURRENT_ENERGY_RATING %in% c('D', 'E','F','G'),'C-','NA' )))]
tmp[n_Crel =="NA", n_Crel:= ifelse(CURRENT_ENERGY_EFFICIENCY > 100, 'C+', 'C-')]#DEALs with: tmp[CURRENT_ENERGY_RATING =="INVALID!", ]$CURRENT_ENERGY_EFFICIENCY
#N12: create new Tenure column
LUT_colum <- LUT_tenure[match(tmp$TENURE, LUT_tenure$tenure_factors),"harmonisation"]
tmp[,n_tenure := LUT_colum]
tmp[is.na(n_tenure),n_tenure := 'unknown'] #deals with NAs
#N13: create new Built Form column
LUT_colum <- LUT_builtForm[match(tmp$BUILT_FORM, LUT_builtForm$BUILT_FORMfactors),"harmonisation"]
tmp[,n_builtForm := LUT_colum]
tmp[is.na(n_builtForm),n_builtForm := 'unknown']
tmp <-tmp[, c("LAD11NM","LMK_KEY",
"CURRENT_ENERGY_EFFICIENCY","POTENTIAL_ENERGY_EFFICIENCY",
"str_concat","UPRN","ubdc_UPRN",
"TRANSACTION_TYPE","INSPECTION_DATE",
"TENURE","BUILT_FORM","PROPERTY_TYPE", names(tmp)[which(startsWith(names(tmp),'n_'))]) ]
save(tmp_write, file = paste0("../Outputs/WIP_longitudinal/longitudinal_baseline_",region,".RData") )
print(paste('runtime:', Sys.time() - start.time))#2 mins
}
print(paste('runtime:', Sys.time() - start.time))#2 mins
start.time <- Sys.time()
#long_data <- long_data[1] #testing
for (region in long_data) {
print(paste(region, Sys.time()))
tmp <- loadRData(paste0("../Data/RData_longitudinal/longitudinalEPCs_",region,".RData") )
#N1-2: first and last entries
tmp <- tmp[order(n_GRP,INSPECTION_DATE)]
tmp[, n_first :=  min(INSPECTION_DATE), by=list(n_GRP)]
tmp[  !is.na(n_first)] #remove where inspection date is NA, e.g, there are 7 in LONDON: 813658 813659 818797 818798 818799 921798 921799
tmp[, n_last := max(INSPECTION_DATE), by=list(n_GRP)]
#N3: info on repeats
tmp[, n_appearance := .N , by=list(n_GRP)]
#N4: info on UPRNs differences and NAs
tmp[, n_erNoUPRN := ifelse(UPRN == ubdc_UPRN,'same','diffUPRNs')]
tmp[, n_erNoUPRN := ifelse(UPRN == "" | is.na(UPRN),'diffUPRNs_NA_UPRN',n_erNoUPRN) ]
tmp[, n_erNoUPRN := ifelse(ubdc_UPRN == ""| is.na(ubdc_UPRN),'diffUPRNs_NA_ubdc_UPRN',n_erNoUPRN) ]
tmp[, n_erNoUPRN := ifelse(n_UPRN == "" | is.na(n_UPRN),'noUPRN',n_erNoUPRN) ]
#Deltas
##N5: n_d_CEE_ Change in CEE from previous entry
tmp[,CURRENT_ENERGY_EFFICIENCY := as.integer(CURRENT_ENERGY_EFFICIENCY) ]
tmp[, n_d_cEE := CURRENT_ENERGY_EFFICIENCY - shift(CURRENT_ENERGY_EFFICIENCY , fill = first(CURRENT_ENERGY_EFFICIENCY)), by=list(n_GRP)]
tmp[INSPECTION_DATE == n_first, n_d_cEE := NA_integer_]
##N6: n_d_time Days between previous entry
tmp[, n_d_time := as.numeric(difftime(INSPECTION_DATE,
shift(INSPECTION_DATE , fill = first(INSPECTION_DATE)),
units = c("days"))), by=list(n_GRP)]
##N7: days by group
tmp[, n_d_time_same_insp_day := ifelse(n_d_time == 0, 'same_day',
ifelse(n_d_time < 8, 'same_week',
ifelse(n_d_time < 30, 'same_month',
ifelse(n_d_time < 365, 'same_year', 'more_than_yr' ) )))]
#N8: Changes between the first and last, where more than 2 entries
tmp[, n_delta_change_first2last := last(CURRENT_ENERGY_EFFICIENCY) - first(CURRENT_ENERGY_EFFICIENCY), by=list(n_GRP)]
tmp[  n_last != INSPECTION_DATE, n_delta_change_first2last:= NA]
#N9:
tmp[, n_changeDir_first2last := ifelse(n_delta_change_first2last > 0, 'up', ifelse(n_delta_change_first2last == 0, 'NA', 'down' ) ) ]
#N10:
tmp[, n_changeLetter_first2last := ifelse(last(CURRENT_ENERGY_RATING) == first(CURRENT_ENERGY_RATING),'same','diff'), by=list(n_GRP)]
tmp[  n_last != INSPECTION_DATE, n_changeLetter_first2last:= NA]
#N11: create C relative column
tmp[, n_Crel:= ifelse(CURRENT_ENERGY_RATING == 'C', 'C',
ifelse(CURRENT_ENERGY_RATING %in% c('A', 'B'), 'C+',
ifelse(CURRENT_ENERGY_RATING %in% c('D', 'E','F','G'),'C-','NA' )))]
tmp[n_Crel =="NA", n_Crel:= ifelse(CURRENT_ENERGY_EFFICIENCY > 100, 'C+', 'C-')]#DEALs with: tmp[CURRENT_ENERGY_RATING =="INVALID!", ]$CURRENT_ENERGY_EFFICIENCY
#N12: create new Tenure column
LUT_colum <- LUT_tenure[match(tmp$TENURE, LUT_tenure$tenure_factors),"harmonisation"]
tmp[,n_tenure := LUT_colum]
tmp[is.na(n_tenure),n_tenure := 'unknown'] #deals with NAs
#N13: create new Built Form column
LUT_colum <- LUT_builtForm[match(tmp$BUILT_FORM, LUT_builtForm$BUILT_FORMfactors),"harmonisation"]
tmp[,n_builtForm := LUT_colum]
tmp[is.na(n_builtForm),n_builtForm := 'unknown']
tmp <-tmp[, c("LAD11NM","LMK_KEY",
"CURRENT_ENERGY_EFFICIENCY","POTENTIAL_ENERGY_EFFICIENCY",
"str_concat","UPRN","ubdc_UPRN",
"TRANSACTION_TYPE","INSPECTION_DATE",
"TENURE","BUILT_FORM","PROPERTY_TYPE", names(tmp)[which(startsWith(names(tmp),'n_'))]) ]
save(tmp, file = paste0("../Outputs/WIP_longitudinal/longitudinal_baseline_",region,".RData") )
print(paste('runtime:', Sys.time() - start.time))#2 mins
}
print(paste('complete loop:', Sys.time() - start.time))#2 mins
longitudinal_baseline <- loadRData(paste0("../Outputs/WIP_longitudinal/longitudinal_baseline_",region,".RData") )
tmp <- loadRData(paste0("../Data/RData_longitudinal/longitudinalEPCs_",region,".RData") )
#N1-2: first and last entries
tmp <- tmp[order(n_GRP,INSPECTION_DATE)]
tmp[, n_first :=  min(INSPECTION_DATE), by=list(n_GRP)]
tmp[  !is.na(n_first)] #remove where inspection date is NA, e.g, there are 7 in LONDON: 813658 813659 818797 818798 818799 921798 921799
tmp[, n_last := max(INSPECTION_DATE), by=list(n_GRP)]
#N3: info on repeats
tmp[, n_appearance := .N , by=list(n_GRP)]
#N4: info on UPRNs differences and NAs
tmp[, n_erNoUPRN := ifelse(UPRN == ubdc_UPRN,'same','diffUPRNs')]
tmp[, n_erNoUPRN := ifelse(UPRN == "" | is.na(UPRN),'diffUPRNs_NA_UPRN',n_erNoUPRN) ]
tmp[, n_erNoUPRN := ifelse(ubdc_UPRN == ""| is.na(ubdc_UPRN),'diffUPRNs_NA_ubdc_UPRN',n_erNoUPRN) ]
tmp[, n_erNoUPRN := ifelse(n_UPRN == "" | is.na(n_UPRN),'noUPRN',n_erNoUPRN) ]
#Deltas
##N5: n_d_CEE_ Change in CEE from previous entry
tmp[,CURRENT_ENERGY_EFFICIENCY := as.integer(CURRENT_ENERGY_EFFICIENCY) ]
tmp[, n_d_cEE := CURRENT_ENERGY_EFFICIENCY - shift(CURRENT_ENERGY_EFFICIENCY , fill = first(CURRENT_ENERGY_EFFICIENCY)), by=list(n_GRP)]
tmp[INSPECTION_DATE == n_first, n_d_cEE := NA_integer_]
##N6: n_d_time Days between previous entry
tmp[, n_d_time := as.numeric(difftime(INSPECTION_DATE,
shift(INSPECTION_DATE , fill = first(INSPECTION_DATE)),
units = c("days"))), by=list(n_GRP)]
##N7: days by group
tmp[, n_d_time_same_insp_day := ifelse(n_d_time == 0, 'same_day',
ifelse(n_d_time < 8, 'same_week',
ifelse(n_d_time < 30, 'same_month',
ifelse(n_d_time < 365, 'same_year', 'more_than_yr' ) )))]
#N8: Changes between the first and last, where more than 2 entries
tmp[, n_delta_change_first2last := last(CURRENT_ENERGY_EFFICIENCY) - first(CURRENT_ENERGY_EFFICIENCY), by=list(n_GRP)]
tmp[  n_last != INSPECTION_DATE, n_delta_change_first2last:= NA]
#N9:
tmp[, n_changeDir_first2last := ifelse(n_delta_change_first2last > 0, 'up', ifelse(n_delta_change_first2last == 0, 'NA', 'down' ) ) ]
#N10:
tmp[, n_changeLetter_first2last := ifelse(last(CURRENT_ENERGY_RATING) == first(CURRENT_ENERGY_RATING),'same','diff'), by=list(n_GRP)]
tmp[  n_last != INSPECTION_DATE, n_changeLetter_first2last:= NA]
#N11: create C relative column
tmp[, n_Crel:= ifelse(CURRENT_ENERGY_RATING == 'C', 'C',
ifelse(CURRENT_ENERGY_RATING %in% c('A', 'B'), 'C+',
ifelse(CURRENT_ENERGY_RATING %in% c('D', 'E','F','G'),'C-','NA' )))]
tmp[n_Crel =="NA", n_Crel:= ifelse(CURRENT_ENERGY_EFFICIENCY > 100, 'C+', 'C-')]#DEALs with: tmp[CURRENT_ENERGY_RATING =="INVALID!", ]$CURRENT_ENERGY_EFFICIENCY
#N12: create new Tenure column
LUT_colum <- LUT_tenure[match(tmp$TENURE, LUT_tenure$tenure_factors),"harmonisation"]
tmp[,n_tenure := LUT_colum]
tmp[is.na(n_tenure),n_tenure := 'unknown'] #deals with NAs
#N13: create new Built Form column
LUT_colum <- LUT_builtForm[match(tmp$BUILT_FORM, LUT_builtForm$BUILT_FORMfactors),"harmonisation"]
tmp[,n_builtForm := LUT_colum]
tmp[is.na(n_builtForm),n_builtForm := 'unknown']
a <- tmp
tmp <-tmp[, c("LAD11NM","LMK_KEY",
"CURRENT_ENERGY_EFFICIENCY","POTENTIAL_ENERGY_EFFICIENCY",
"str_concat","UPRN","ubdc_UPRN",
"TRANSACTION_TYPE","INSPECTION_DATE",
"TENURE","BUILT_FORM","PROPERTY_TYPE", names(tmp)[which(startsWith(names(tmp),'n_'))]) ]
tmp <- a
tmp <-tmp[, .c("LAD11NM","LMK_KEY",
"CURRENT_ENERGY_EFFICIENCY","POTENTIAL_ENERGY_EFFICIENCY",
"str_concat","UPRN","ubdc_UPRN",
"TRANSACTION_TYPE","INSPECTION_DATE",
"TENURE","BUILT_FORM","PROPERTY_TYPE", names(tmp)[which(startsWith(names(tmp),'n_'))]) ]
tmp <-tmp[c("LAD11NM","LMK_KEY",
"CURRENT_ENERGY_EFFICIENCY","POTENTIAL_ENERGY_EFFICIENCY",
"str_concat","UPRN","ubdc_UPRN",
"TRANSACTION_TYPE","INSPECTION_DATE",
"TENURE","BUILT_FORM","PROPERTY_TYPE", names(tmp)[which(startsWith(names(tmp),'n_'))]) ]
c("LAD11NM","LMK_KEY",
"CURRENT_ENERGY_EFFICIENCY","POTENTIAL_ENERGY_EFFICIENCY",
"str_concat","UPRN","ubdc_UPRN",
"TRANSACTION_TYPE","INSPECTION_DATE",
"TENURE","BUILT_FORM","PROPERTY_TYPE", names(tmp)[which(startsWith(names(tmp),'n_'))])
View(tmp[c("LAD11NM","LMK_KEY") ])
View(tmp[,c("LAD11NM","LMK_KEY") ])
View(tmp[,c(names(tmp)[which(startsWith(names(tmp),'n_'))) ])
View(tmp[,c(names(tmp)[which(startsWith(names(tmp),'n_'))]) ])
newcols <- c(names(tmp)[which(startsWith(names(tmp),'n_')))
newcols <- c(names(tmp)[which(startsWith(names(tmp),'n_'))])
newcols
tmp <-tmp[,c("LAD11NM","LMK_KEY",
"CURRENT_ENERGY_EFFICIENCY","ENERGY_CONSUMPTION_CURRENT","POTENTIAL_ENERGY_EFFICIENCY",
"str_concat","UPRN","ubdc_UPRN",
"TRANSACTION_TYPE","INSPECTION_DATE",
"TENURE","BUILT_FORM","PROPERTY_TYPE", newcols) ]
tmp <- a
tmp <-tmp[,..c("LAD11NM","LMK_KEY",
"CURRENT_ENERGY_EFFICIENCY","ENERGY_CONSUMPTION_CURRENT","POTENTIAL_ENERGY_EFFICIENCY",
"str_concat","UPRN","ubdc_UPRN",
"TRANSACTION_TYPE","INSPECTION_DATE",
"TENURE","BUILT_FORM","PROPERTY_TYPE", newcols) ]
tmp <-tmp[, ..newcols]
tmp <- a
newcols <- c("LAD11NM","LMK_KEY",
"CURRENT_ENERGY_EFFICIENCY","ENERGY_CONSUMPTION_CURRENT","POTENTIAL_ENERGY_EFFICIENCY",
"str_concat","UPRN","ubdc_UPRN",
"TRANSACTION_TYPE","INSPECTION_DATE",
"TENURE","BUILT_FORM","PROPERTY_TYPE", newcols)
newcols
tmp <-tmp[,..newcols]
keepCols <- c(names(tmp)[which(startsWith(names(tmp),'n_'))])
keepCols <- c("LAD11NM","LMK_KEY",
"CURRENT_ENERGY_EFFICIENCY","ENERGY_CONSUMPTION_CURRENT","POTENTIAL_ENERGY_EFFICIENCY",
"str_concat","UPRN","ubdc_UPRN",
"TRANSACTION_TYPE","INSPECTION_DATE",
"TENURE","BUILT_FORM","PROPERTY_TYPE", newcols)
tmp <-tmp[,..keepCols]
View(tmp)
start.time <- Sys.time()
#long_data <- long_data[1] #testing
for (region in long_data) {
print(paste(region, Sys.time()))
tmp <- loadRData(paste0("../Data/RData_longitudinal/longitudinalEPCs_",region,".RData") )
#N1-2: first and last entries
tmp <- tmp[order(n_GRP,INSPECTION_DATE)]
tmp[, n_first :=  min(INSPECTION_DATE), by=list(n_GRP)]
tmp[  !is.na(n_first)] #remove where inspection date is NA, e.g, there are 7 in LONDON: 813658 813659 818797 818798 818799 921798 921799
tmp[, n_last := max(INSPECTION_DATE), by=list(n_GRP)]
#N3: info on repeats
tmp[, n_appearance := .N , by=list(n_GRP)]
#N4: info on UPRNs differences and NAs
tmp[, n_erNoUPRN := ifelse(UPRN == ubdc_UPRN,'same','diffUPRNs')]
tmp[, n_erNoUPRN := ifelse(UPRN == "" | is.na(UPRN),'diffUPRNs_NA_UPRN',n_erNoUPRN) ]
tmp[, n_erNoUPRN := ifelse(ubdc_UPRN == ""| is.na(ubdc_UPRN),'diffUPRNs_NA_ubdc_UPRN',n_erNoUPRN) ]
tmp[, n_erNoUPRN := ifelse(n_UPRN == "" | is.na(n_UPRN),'noUPRN',n_erNoUPRN) ]
#Deltas
##N5: n_d_CEE_ Change in CEE from previous entry
tmp[,CURRENT_ENERGY_EFFICIENCY := as.integer(CURRENT_ENERGY_EFFICIENCY) ]
tmp[, n_d_cEE := CURRENT_ENERGY_EFFICIENCY - shift(CURRENT_ENERGY_EFFICIENCY , fill = first(CURRENT_ENERGY_EFFICIENCY)), by=list(n_GRP)]
tmp[INSPECTION_DATE == n_first, n_d_cEE := NA_integer_]
##N6: n_d_time Days between previous entry
tmp[, n_d_time := as.numeric(difftime(INSPECTION_DATE,
shift(INSPECTION_DATE , fill = first(INSPECTION_DATE)),
units = c("days"))), by=list(n_GRP)]
##N7: days by group
tmp[, n_d_time_same_insp_day := ifelse(n_d_time == 0, 'same_day',
ifelse(n_d_time < 8, 'same_week',
ifelse(n_d_time < 30, 'same_month',
ifelse(n_d_time < 365, 'same_year', 'more_than_yr' ) )))]
#N8: Changes between the first and last, where more than 2 entries
tmp[, n_delta_change_first2last := last(CURRENT_ENERGY_EFFICIENCY) - first(CURRENT_ENERGY_EFFICIENCY), by=list(n_GRP)]
tmp[  n_last != INSPECTION_DATE, n_delta_change_first2last:= NA]
#N9:
tmp[, n_changeDir_first2last := ifelse(n_delta_change_first2last > 0, 'up', ifelse(n_delta_change_first2last == 0, 'NA', 'down' ) ) ]
#N10:
tmp[, n_changeLetter_first2last := ifelse(last(CURRENT_ENERGY_RATING) == first(CURRENT_ENERGY_RATING),'same','diff'), by=list(n_GRP)]
tmp[  n_last != INSPECTION_DATE, n_changeLetter_first2last:= NA]
#N11: create C relative column
tmp[, n_Crel:= ifelse(CURRENT_ENERGY_RATING == 'C', 'C',
ifelse(CURRENT_ENERGY_RATING %in% c('A', 'B'), 'C+',
ifelse(CURRENT_ENERGY_RATING %in% c('D', 'E','F','G'),'C-','NA' )))]
tmp[n_Crel =="NA", n_Crel:= ifelse(CURRENT_ENERGY_EFFICIENCY > 100, 'C+', 'C-')]#DEALs with: tmp[CURRENT_ENERGY_RATING =="INVALID!", ]$CURRENT_ENERGY_EFFICIENCY
#N12: create new Tenure column
LUT_colum <- LUT_tenure[match(tmp$TENURE, LUT_tenure$tenure_factors),"harmonisation"]
tmp[,n_tenure := LUT_colum]
tmp[is.na(n_tenure),n_tenure := 'unknown'] #deals with NAs
#N13: create new Built Form column
LUT_colum <- LUT_builtForm[match(tmp$BUILT_FORM, LUT_builtForm$BUILT_FORMfactors),"harmonisation"]
tmp[,n_builtForm := LUT_colum]
tmp[is.na(n_builtForm),n_builtForm := 'unknown']
keepCols <- c(names(tmp)[which(startsWith(names(tmp),'n_'))])
keepCols <- c("LAD11NM","LMK_KEY",
"CURRENT_ENERGY_EFFICIENCY","ENERGY_CONSUMPTION_CURRENT","POTENTIAL_ENERGY_EFFICIENCY",
"str_concat","UPRN","ubdc_UPRN",
"TRANSACTION_TYPE","INSPECTION_DATE",
"TENURE","BUILT_FORM","PROPERTY_TYPE", newcols)
tmp <-tmp[,..keepCols]
save(tmp, file = paste0("../Outputs/WIP_longitudinal/longitudinal_baseline_",region,".RData") )
print(paste('runtime:', Sys.time() - start.time))
}
print(paste('complete loop:', Sys.time() - start.time))#37 mins, date: 11/08/22
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(data.table)
library(fasttime)
library(readxl)
loadRData <- function(fileName){
#loads an RData file, and returns it
load(fileName)
get(ls()[ls() != "fileName"])
}
#get folders
cross_data <- list.files(path = "../Data/RData_crossSectional", pattern = NULL, all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
cross_data <- gsub(".RData","",as.character(cross_data))
cross_data <- gsub("crossSectional_","",as.character(cross_data))
#get loopUp
LUT_tenure <- read_excel("../Data/OS-N_EPC_v10_LUT+dictionaries.xlsx", sheet = "TENURE",range = cell_cols("B:C"))
LUT_builtForm <- read_excel("../Data/OS-N_EPC_v10_LUT+dictionaries.xlsx", sheet = "BUILT_FORM",range = cell_cols("B:C"))
#add builing age here
region <- cross_data[1]
print(paste(region, Sys.time()))
tmp <- loadRData(paste0("../Data/RData_crossSectional/crossSectional_",region,".RData") )
LA = unique(tmp$LAD11NM)[1]
tmp_LA <- tmp[ LAD11NM == LA, c('CURRENT_ENERGY_RATING','TENURE','BUILT_FORM')]
#N1: create C relative column
tmp_LA[, n_Crel:= ifelse(CURRENT_ENERGY_RATING == 'C', 'C',
ifelse(CURRENT_ENERGY_RATING %in% c('A', 'B'), 'C+',
ifelse(CURRENT_ENERGY_RATING %in% c('D', 'E','F','G'),'C-','NA' )))]
#N2: create new Tenure column
LUT_colum <- LUT_tenure[match(tmp_LA$TENURE, LUT_tenure$tenure_factors),"harmonisation"]
tmp_LA[,n_tenure := LUT_colum]
tmp_LA[is.na(n_tenure),n_tenure := 'unknown'] #deals with NAs
#N2: create new Built Form column
LUT_colum <- LUT_builtForm[match(tmp_LA$BUILT_FORM, LUT_builtForm$BUILT_FORMfactors),"harmonisation"]
tmp_LA[,n_builtForm := LUT_colum]
tmp_LA[is.na(n_builtForm),n_builtForm := 'unknown']
t_LAD_row <- tmp_LA[,.N ,by = c('n_tenure','n_builtForm','n_Crel')]
test <- reshape(long, idvar = "LAD11NM", timevar = "n_erNoUPRN", direction = "wide")
View(t_LAD_row)
LAD_table <- data.table()
start.time <- Sys.time()
for (region in cross_data) {
print(paste(region, Sys.time()))
tmp <- loadRData(paste0("../Data/RData_crossSectional/crossSectional_",region,".RData") )
for (LA in unique(tmp$LAD11NM)) {
tmp_LA <- tmp # tmp[ LAD11NM == LA, c('a','b','c')]
#t_LAD_row <- tmp_LA[,.N ,by = c('x','y','z')]
}
}
print(paste('loop time:', Sys.time() - start.time))#14 mins
if(F){
save(tmp, file = paste0("../Outputs/WIP_crossSectional/crossSectional_baseline_",region,".RData") )
write.xlsx(LAD_table,
file = "../Data/CrossSectional_Summary.xlsx", sheetName="SHEET", append=TRUE)
}
print(paste('save time:', Sys.time() - start.time))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
install.packages("dplyr")
install.packages("tidyverse")
install.packages("data.table")
install.packages("fasttime")
install.packages("readr")
library(dplyr)
library(tidyverse)
library(data.table)
library(readxl)
library(readr)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(data.table)
library(readxl)
library(readr)
loadRData <- function(fileName){
#loads an RData file, and returns it
load(fileName)
get(ls()[ls() != "fileName"])
}
#get folders
cross_data <- list.files(path = "../Data/RData_crossSectional", pattern = NULL, all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
cross_data <- gsub(".RData","",as.character(cross_data))
cross_data <- gsub("crossSectional_","",as.character(cross_data))
EDA_cols <- read_csv("../Data/EDA_colour_scheme.csv")
EDA_cols <- subset(EDA_cols[EDA_cols$geography_name %in%  cross_data, ])
EDA_cols$geography_name
unknown_region_df <- loadRData(paste0("../Data/RData_crossSectional/crossSectional_","Unknown",".RData") )
tmp <- head(unknown_region_df, 100)
head(tmp)
unknown_region_df<- loadRData( paste0("../Outputs/WIP_crossSectional/crossSectional_baseline_","Unknown",".RData") )
tmp_region_df <- head(region_df, 200)
tmp <- head(unknown_region_df, 100)
View(tmp)
EDA_cols <- read_csv("../Data/EDA_colour_scheme.csv")
EDA_cols <- subset(EDA_cols[EDA_cols$geography_name %in%  cross_data, ])
EDA_cols$ONSUD
print(ONSUD)
for(ONSUD in EDA_cols$ONSUD){
print(ONSUD)
}
if(NA)
if(na)
